{"version":3,"sources":["views/GameManagement/GameList/EditGame.js"],"names":["EditGame","navigate","useNavigate","gameId","useParams","useState","initialValue","setInitialvalue","gameName","setGameName","gameDescription","setGameDescription","imageValidate","setImageValidate","imageFile","setImageFile","gameTypes","setGameTypes","FileUpload","setFileUpload","newGameType","setNewGameType","featuredGameType","setFeaturedGameType","singlePlayer","setSinglePlayer","multiPlayer","setMultiPlayer","dailyCompetition","setDailyCompetition","website","setWebsite","html5Link","setHtmlLink","gameVersion","setGameVersion","checked","setChecked","checked2","setChecked2","error","setError","formData","FormData","progress","setProgress","gameCreationValue","useEffect","fetch","config","apiServer","then","res","json","data","gameType","appType","title","sx","display","justifyContent","alignItems","color","onSubmit","e","preventDefault","file","appFile","convertImage","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","convertBase64","image","stringLength","length","Math","ceil","gameIcon","packageName","actionName","re","test","append","JSON","stringify","axios","put","id","headers","charset","swal","text","icon","button","willSuccess","catch","apkLink","console","log","buttons","container","rowSpacing","columnSpacing","xs","sm","md","item","onChange","target","value","variant","fullWidth","helperText","style","disabled","width","dateAdapter","AdapterDateFns","label","margin","defaultValue","createdAt","renderInput","params","multiline","rows","required","gutterBottom","htmlFor","className","accept","type","files","severity","minWidth","labelId","mt","marginTop","defaultChecked","mb"],"mappings":"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","file":"static/js/24.d69ad2a1.chunk.js","sourcesContent":["import { DatePicker, LocalizationProvider } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport {\n  Alert,\n  Box,\n  Button,\n  Grid,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport FormControl from \"@mui/material/FormControl\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport config from \"../../../config\";\nimport \"../../Banner/index.css\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"../GameCreation/gameCreationApkfileCss.css\";\nconst EditGame = () => {\n  const navigate = useNavigate();\n  const { gameId } = useParams();\n  const [initialValue, setInitialvalue] = useState({});\n  const [gameName, setGameName] = useState(initialValue.gameName);\n  const [gameDescription, setGameDescription] = useState(\n    initialValue.gameDescription\n  );\n  const [imageValidate, setImageValidate] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [gameTypes, setGameTypes] = useState('');\n  const [FileUpload, setFileUpload] = useState({});\n  const [newGameType, setNewGameType] = useState(false);\n  const [featuredGameType, setFeaturedGameType] = useState(false);\n  const [singlePlayer, setSinglePlayer] = useState(false);\n  const [multiPlayer, setMultiPlayer] = useState(false);\n  const [dailyCompetition, setDailyCompetition] = useState(false);\n  const [website, setWebsite] = useState(false);\n  const [html5Link, setHtmlLink] = useState(\"\");\n  const [gameVersion, setGameVersion] = useState(\"\");\n  const [checked, setChecked] = useState(true);\n  const [checked2, setChecked2] = useState(false);\n  const [error, setError] = useState(\"\");\n  const formData = new FormData();\n  const [progress, setProgress] = useState(false);\n\n  const convertBase64 = (file) => {\n    const convertImage = new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n    return convertImage;\n  };\n  const gameCreationValue = {};\n  useEffect(() => {\n    fetch(`${config.apiServer}/game/${gameId}/get-game`)\n      .then((res) => res.json())\n      .then((data) => {\n        setInitialvalue(data);\n        setNewGameType(data.gameType === \"New\" ? true : false);\n        setFeaturedGameType(data.gameType === \"Featured\" ? true : false);\n        setSinglePlayer(data.singlePlayer);\n        setMultiPlayer(data.multiPlayer);\n        setWebsite(data.website);\n        setGameDescription(data.gameDescription);\n        setGameName(data.gameName);\n        setGameTypes(data.appType);\n        setHtmlLink(data.html5Link);\n        setGameVersion(data.gameVersion);\n      });\n  }, [gameId]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setProgress(true);\n    if (imageFile) {\n      const file = imageFile[0];\n      const appFile = FileUpload[0];\n\n      convertBase64(file).then((image) => {\n        // const removeImgVariable = image.split(\",\")[1];\n        const stringLength = image.length - \"data:image/png;base64,\".length;\n        const sizeInBytes =\n          4 * Math.ceil(stringLength / 3) * 0.5624896334383812;\n        const sizeInKb = sizeInBytes / 1000;\n        if (sizeInKb < 200) {\n          \n\n          if (featuredGameType) {\n            gameCreationValue.gameType = \"Featured\";\n          }\n          if (newGameType) {\n            gameCreationValue.gameType = \"New\";\n          }\n          gameCreationValue.gameIcon = image;\n          gameCreationValue.singlePlayer = singlePlayer;\n          gameCreationValue.multiPlayer = multiPlayer;\n          gameCreationValue.dailyCompetition = dailyCompetition;\n          gameCreationValue.website = website;\n          gameCreationValue.gameDescription = gameDescription;\n          gameCreationValue.gameVersion = gameVersion;\n          gameCreationValue.packageName = initialValue?.packageName;\n          gameCreationValue.actionName = initialValue?.actionName;\n          gameCreationValue.html5Link = !html5Link\n            ? initialValue.html5Link\n            : html5Link;\n          gameCreationValue.appType = gameTypes;\n          gameCreationValue.gameName = gameName;\n          const re = /^[0-9\\b]+$/;\n          if (re.test(gameName) || re.test(gameDescription)) {\n            return setError(\n              \"Please enter a valid name, it should not contain numbers\"\n            );\n          }\n          formData.append(\"file_path\", appFile);\n          formData.append(\"data\", JSON.stringify(gameCreationValue));\n         \n          var header = {\n            \"Content-Type\": \"application/json\",\n            charset: \"utf-8\",\n          };\n\n          axios\n            .put(\n              `${config.apiServer}/game/${initialValue?.id}/edit-game`,\n              formData,\n              {\n                headers: header,\n              }\n            )\n            .then((res) => {\n              setProgress(false);\n              if (res.data) {\n                \n                swal({\n                  title: \"Game Updated\",\n                  text: \"Game Updated Successfully\",\n                  icon: \"success\",\n                  button: true,\n                }).then((willSuccess) => {\n                  if (willSuccess) {\n                    navigate(\"/admin/games/game-list\");\n                  }\n                });\n              } else {\n                swal({\n                  title: \"Game Updated Failed\",\n                  text: \"Game Updated Failed\",\n                  icon: \"error\",\n                  button: true,\n                });\n              }\n            })\n            .catch((error) => {});\n        } else {\n          setImageValidate(true);\n          return;\n        }\n      });\n    } else {\n      const appFile = FileUpload[0];\n          if (featuredGameType) {\n            gameCreationValue.gameType = \"Featured\";\n          }\n          if (newGameType) {\n            gameCreationValue.gameType = \"New\";\n          }\n          gameCreationValue.gameIcon = initialValue?.gameIcon;\n          gameCreationValue.singlePlayer = singlePlayer;\n          gameCreationValue.multiPlayer = multiPlayer;\n          gameCreationValue.dailyCompetition = dailyCompetition;\n          gameCreationValue.website = website;\n          gameCreationValue.gameDescription = gameDescription;\n          gameCreationValue.gameVersion = gameVersion;\n          gameCreationValue.packageName = initialValue?.packageName;\n          gameCreationValue.actionName = initialValue?.actionName;\n          gameCreationValue.html5Link = !html5Link\n            ? initialValue.html5Link\n            : html5Link;\n          gameCreationValue.appType = gameTypes;\n      gameCreationValue.gameName = gameName;\n      \n          const re = /^[0-9\\b]+$/;\n          if (re.test(gameName) || re.test(gameDescription)) {\n            return setError(\n              \"Please enter a valid name, it should not contain numbers\"\n            );\n      }\n      if (appFile) { \n        formData.append(\"file_path\", appFile);\n      } else {\n        gameCreationValue.apkLink = initialValue?.apkLink;\n      }\n          console.log(gameCreationValue);\n          formData.append(\"data\", JSON.stringify(gameCreationValue));\n\n          var header = {\n            \"Content-Type\": \"application/json\",\n            charset: \"utf-8\",\n          };\n\n          axios\n            .put(\n              `${config.apiServer}/game/${initialValue?.id}/edit-game`,\n              formData,\n              {\n                headers: header,\n              }\n            )\n            .then((res) => {\n              setProgress(false);\n              if (res.data) {\n                swal({\n                  title: \"Game Updated\",\n                  text: \"Game Updated Successfully\",\n                  icon: \"success\",\n                  buttons: true,\n                }).then((willSuccess) => {\n                  if (willSuccess) {\n                    navigate(\"/admin/games/game-list\");\n                  }\n                });\n              } else {\n                swal({\n                  title: \"Game Updated Failed\",\n                  text: \"Game Updated Failed\",\n                  icon: \"error\",\n                  button: true,\n                });\n              }\n            })\n            .catch((error) => {});\n    }\n  };\n\n  return (\n    <>\n      <MainCard title=\"Game Edit\">\n        {progress ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <CircularProgress color=\"secondary\" />\n          </Box>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <Grid\n              container\n              rowSpacing={1}\n              columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n            >\n              <Grid item xs={12} md={6} sm={12}>\n                <TextField\n                  onChange={(e) => setGameName(e.target.value)}\n                  id=\"outlined-basic\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  fullWidth\n                  value={initialValue?.gameName || \"\"}\n                  helperText={\n                    error ? <span style={{ color: \"red\" }}>{error}</span> : \"\"\n                  }\n                  disabled\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sm={12}\n                sx={{\n                  \"& .css-1u3bzj6-MuiFormControl-root-MuiTextField-root\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    id=\"outlined-basic\"\n                    label=\"Created On\"\n                    margin=\"normal\"\n                    disabled\n                    defaultValue={initialValue?.createdAt}\n                    renderInput={(params) => <TextField {...params} />}\n                    onChange={(e) => e.preventDefault()}\n                  />\n                </LocalizationProvider>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"outlined-basic\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  color=\"secondary\"\n                  defaultValue={initialValue?.gameDescription}\n                  fullWidth\n                  multiline\n                  rows={3}\n                  helperText={\n                    error ? <span style={{ color: \"red\" }}>{error}</span> : \"\"\n                  }\n                  required\n                  onChange={(e) => setGameDescription(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Box>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Upload Image (*Image Size should be less than 200 KB)\n                  </Typography>\n                  <label htmlFor=\"contained-button-file\">\n                    <span className=\"imageFieldPosition\">\n                      <input\n                        className=\"FlexButton_uploadText\"\n                        id=\"contained-button-file\"\n                        accept=\"image/*\"\n                        type=\"file\"\n                        style={{ display: \"block\" }}\n                        onChange={(e) => setImageFile(e.target.files)}\n                      />\n                    </span>\n                  </label>\n                  {imageValidate && (\n                    <Alert variant=\"outlined\" severity=\"error\">\n                      \"Oops!\", \"Image size should be less than 200 KB\"\n                    </Alert>\n                  )}\n                </Box>\n              </Grid>\n              {/* Apk type selection */}\n              <Grid item xs={12} sm={6}>\n                <Box sx={{ minWidth: 120 }}>\n                  <FormControl fullWidth>\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                      Game Type\n                    </Typography>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={gameTypes || \"\"}\n                      color=\"secondary\"\n                      onChange={(e) => {\n                        setGameTypes(e.target.value);\n                      }}\n                      required\n                    >\n                      <MenuItem value={\"html5\"}>HTML5</MenuItem>\n                      <MenuItem value={\"apk\"}>APK</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Grid>\n              {/* Conditional file upload section */}\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <label>\n                    {/* writing the uploaderComponent */}\n\n                    <Box sx={{ mt: 1 }}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Upload Apk\n                      </Typography>\n                      <input\n                        className=\"FlexButton_uploadText\"\n                        id=\"contained-button-file\"\n                        accept=\".apk,.xapk\"\n                        type=\"file\"\n                        style={{ display: \"block\" }}\n                        onChange={(e) => setFileUpload(e.target.files)}\n                      />\n                    </Box>\n                  </label>\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    sx={{ mt: 4 }}\n                    id=\"outlined-basic\"\n                    label=\"Game Version\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    defaultValue={initialValue?.gameVersion}\n                    onChange={(e) => setGameVersion(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    style={{ marginTop: \"17px\" }}\n                    id=\"outlined-basic\"\n                    label=\"Activity Name\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    disabled\n                    defaultValue={initialValue?.actionName}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    style={{ marginTop: \"17px\" }}\n                    id=\"outlined-basic\"\n                    label=\"Package Name\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    disabled\n                    defaultValue={initialValue?.packageName}\n                  />\n                )}\n              </Grid>\n              {/* Switch buttons */}\n              <Grid item xs={12} md={6} sm={12}>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h3\">\n                  Game Type\n                </Typography>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h4\">\n                  New{\" \"}\n                  <span>\n                    {(initialValue?.gameType === \"New\" ||\n                      initialValue?.gameType === \"html5\") && (\n                        <Switch\n                          color=\"secondary\"\n                          defaultChecked\n                          disabled={checked2}\n                          onChange={(e) => {\n                            setNewGameType(e.target.checked);\n                            setChecked(e.target.checked);\n                          }}\n                        />\n                      )}\n                    \n                  </span>{\" \"}\n                </Typography>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h4\">\n                  Featured{\" \"}\n                  <span>\n                    {initialValue?.gameType === \"Featured\" && (\n                      <Switch\n                        color=\"secondary\"\n                        defaultChecked\n                        disabled={checked2}\n                        onChange={(e) => {\n                          setFeaturedGameType(e.target.checked);\n                        }}\n                      />\n                    )}\n                    {initialValue?.gameType !== \"Featured\" && (\n                      <Switch\n                        color=\"secondary\"\n                        disabled={checked}\n                        onChange={(e) => {\n                          setFeaturedGameType(e.target.checked);\n                          setChecked2(e.target.checked);\n                        }}\n                      />\n                    )}\n                  </span>{\" \"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                <Typography sx={{ marginTop: \"15px\", mb: 1 }} variant=\"h3\">\n                  Game Functions (Min. One)\n                </Typography>\n\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Single Player{\" \"}\n                    <span>\n                      {initialValue.singlePlayer && (\n                        <Switch\n                          defaultChecked\n                          color=\"secondary\"\n                          onChange={(e) => setSinglePlayer(e.target.checked)}\n                        />\n                      )}\n                      {!initialValue.singlePlayer && (\n                        <Switch\n                          color=\"secondary\"\n                          onChange={(e) => setSinglePlayer(e.target.checked)}\n                        />\n                      )}\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && singlePlayer && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setHtmlLink(e.target.value);\n                        }}\n                        defaultValue={initialValue?.html5Link}\n                        required\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Multi Player{\" \"}\n                    <span>\n                      {initialValue.multiPlayer && (\n                        <Switch\n                          defaultChecked\n                          color=\"secondary\"\n                          onChange={(e) => setMultiPlayer(e.target.checked)}\n                        />\n                      )}\n                      {!initialValue.multiPlayer && (\n                        <Switch\n                          color=\"secondary\"\n                          onChange={(e) => setMultiPlayer(e.target.checked)}\n                        />\n                      )}\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && multiPlayer && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setHtmlLink(e.target.value);\n                        }}\n                        defaultValue={initialValue?.html5Link}\n                        required\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Daily Competition{\" \"}\n                    <span>\n                      {initialValue.dailyCompetition && (\n                        <Switch\n                          defaultChecked\n                          color=\"secondary\"\n                          onChange={(e) =>\n                            setDailyCompetition(e.target.checked)\n                          }\n                        />\n                      )}\n                      {!initialValue.dailyCompetition && (\n                        <Switch\n                          color=\"secondary\"\n                          onChange={(e) =>\n                            setDailyCompetition(e.target.checked)\n                          }\n                        />\n                      )}\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && dailyCompetition && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setHtmlLink(e.target.value);\n                        }}\n                        defaultValue={initialValue?.html5Link}\n                        required\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Website\n                    <span>\n                      {initialValue.website && (\n                        <Switch\n                          defaultChecked\n                          color=\"secondary\"\n                          onChange={(e) => setWebsite(e.target.checked)}\n                        />\n                      )}\n                      {!initialValue.website && (\n                        <Switch\n                          color=\"secondary\"\n                          onChange={(e) => setWebsite(e.target.checked)}\n                        />\n                      )}\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && website && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setHtmlLink(e.target.value);\n                        }}\n                        defaultValue={initialValue?.html5Link}\n                        required\n                      />\n                    )}\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n            {\n              <Button\n                sx={{ marginTop: \"30px\" }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Submit\n              </Button>\n            }\n          </form>\n        )}\n      </MainCard>\n    </>\n  );\n};\n\nexport default EditGame;\n"],"sourceRoot":""}