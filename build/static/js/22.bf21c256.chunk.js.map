{"version":3,"sources":["views/Exercise/QuestionUpload/UpdateModal.js"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","UpdateModal","handleClose","open","singleQuestion","setCallData","callData","React","useState","question","option1","option2","option3","option4","correctAnswer","updateValue","setUpdateValue","editorState","setEditorState","useQuill","quill","quillRef","useEffect","clipboard","dangerouslyPasteHTML","on","root","innerHTML","handleFieldChange","e","fieldName","target","name","fieldValue","value","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","sx","onSubmit","preventDefault","UpdatedData","fetch","config","apiServer","id","method","headers","body","JSON","stringify","then","res","json","data","swal","title","icon","buttons","dangerMode","willUpdate","catch","err","text","container","rowSpacing","columnSpacing","xs","sm","md","item","mb","variant","display","gutterBottom","height","ref","defaultValue","onChange","fullWidth","color","mt","type","onClick","mx"],"mappings":"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","file":"static/js/22.bf21c256.chunk.js","sourcesContent":["import React  from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport \"./index.css\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport config from \"config\";\nimport swal from \"sweetalert\";\nimport { useQuill } from \"react-quilljs\";\nimport \"../../../../node_modules/quill/dist/quill.snow.css\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"60%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 10,\n  p: 4,\n  borderRadius: 2,\n};\n//initialize the component\nconst UpdateModal = ({\n  handleClose,\n  open,\n  singleQuestion,\n  setCallData,\n  callData,\n}) => {\n  const [updateValue, setUpdateValue] = React.useState({\n    question: singleQuestion?.question,\n    option1: singleQuestion?.option1,\n    option2: singleQuestion?.option2,\n    option3: singleQuestion?.option3,\n    option4: singleQuestion?.option4,\n    correctAnswer: singleQuestion?.correctAnswer,\n  });\n  //quill editor\n  const [editorState, setEditorState] = React.useState(\"\")\n  const { quill, quillRef } = useQuill();\n   React.useEffect(() => {\n     if (quill) {\n       if (singleQuestion?.question) { \n          quill.clipboard.dangerouslyPasteHTML(singleQuestion?.question);\n          quill.on(\"text-change\", () => {\n            setEditorState(quill.root.innerHTML);\n          });\n       }\n       else {\n          quill.clipboard.dangerouslyPasteHTML(\"\");\n          quill.on(\"text-change\", () => {\n            setEditorState(quill.root.innerHTML);\n          });\n       }\n     }\n    }, [quill, singleQuestion.question]);\n \n  const handleFieldChange = (e) => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    setUpdateValue({\n      ...updateValue,\n      [fieldName]: fieldValue,\n    });\n       };\n       \n// submit\n  const handleUpdateQuestion = (e) => {\n    e.preventDefault();\n    const UpdatedData = {\n      ...updateValue,\n      question: editorState,\n    };\n\n    fetch(\n      `${config.apiServer}/excercise/editExcerciseQuestion/${singleQuestion?.id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(UpdatedData),\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data) {\n          handleClose();\n          swal({\n            title: \"Update Successfully\",\n            icon: \"success\",\n            buttons: true,\n            dangerMode: true,\n          }).then((willUpdate) => {\n            if (willUpdate) {\n              setCallData(!callData);\n            }\n          });\n        }\n      })\n      .catch((err) => {\n        swal({\n          title: \"Update Failed\",\n          text: \"Please try again\",\n          icon: \"error\",\n          buttons: true,\n          dangerMode: true,\n        });\n      });\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <form onSubmit={handleUpdateQuestion}>\n              <Grid\n                container\n                rowSpacing={1}\n                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n              >\n                {/* editor */}\n                <Grid item xs={12} sx={{mb:5}}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Question\n                  </Typography>\n                  <Box>\n                    {/* qillTextEditor */}\n                    <div style={{ width: \"100%\", height: \"150px\" }}>\n                      <div ref={quillRef} />\n                    </div>\n                  </Box>\n                </Grid>\n                {/* textfield  */}\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Option A\n                  </Typography>\n                  <TextField\n                    name=\"option1\"\n                    defaultValue={singleQuestion?.option1}\n                    onChange={handleFieldChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Option B\n                  </Typography>\n                  <TextField\n                    name=\"option2\"\n                    defaultValue={singleQuestion?.option2}\n                    onChange={handleFieldChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Option C\n                  </Typography>\n                  <TextField\n                    name=\"option3\"\n                    defaultValue={singleQuestion?.option3}\n                    onChange={handleFieldChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Option D\n                  </Typography>\n                  <TextField\n                    name=\"option4\"\n                    defaultValue={singleQuestion?.option4}\n                    onChange={handleFieldChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    Correct Answer\n                  </Typography>\n                  <TextField\n                    name=\"correctAnswer\"\n                    defaultValue={singleQuestion?.correctAnswer}\n                    onChange={handleFieldChange}\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                  />\n                </Grid>\n                {/* button */}\n                <Grid item xs={12} sx={{ mt: 2 }}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                    Update\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={handleClose}\n                    sx={{ mx: 2 }}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\nexport default UpdateModal;\n\n"],"sourceRoot":""}