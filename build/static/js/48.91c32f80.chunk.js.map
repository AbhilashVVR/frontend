{"version":3,"sources":["views/userManagement/userList/EditUser.js"],"names":["EditUser","params","useParams","navigate","useNavigate","useState","user","setUser","isLoading","setIsLoading","useEffect","fetch","config","apiServer","userID","then","res","json","data","initialValues","firstName","lastName","userName","email","uniqueId","walletCoin","mobileNumber","grade","school","board","pincode","validationSchema","Yup","max","min","title","onSubmit","values","temp","trim","method","headers","body","JSON","stringify","swal","message","container","rowSpacing","columnSpacing","name","field","meta","sx","m","width","item","xs","sm","error","touched","id","label","placeholder","variant","color","disabled","inputProps","maxLength","mx","mt","type"],"mappings":"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","file":"static/js/48.91c32f80.chunk.js","sourcesContent":["import { Button, Grid, TextField } from \"@mui/material\";\nimport config from \"config\";\nimport { Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport Loader from \"ui-component/Loader\";\nimport * as Yup from \"yup\";\n\nconst EditUser = () => {\n  let params = useParams();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${config.apiServer}/user/searchById/${params.userID}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setUser(data);\n        setIsLoading(false);\n      });\n  }, [params.userID]);\n\n  if (isLoading) return <Loader />;\n\n  // initial values\n  const initialValues = {\n    firstName: user?.firstName === null ? \"\" : user?.firstName,\n    lastName: user?.lastName === null ? \"\" : user?.lastName,\n    userName: user?.userName === null ? \" \" : user?.userName,\n    email: user?.email === null ? \"\" : user?.email,\n    uniqueId: user?.uniqueId === null ? \" \" : user?.uniqueId,\n    walletCoin: user?.walletCoin === null ? 0 : user?.walletCoin,\n    mobileNumber: user?.mobileNumber === null ? \"\" : user?.mobileNumber,\n    grade: user?.grade === null ? \"\" : user?.grade,\n    school: user?.school === null ? \"\" : user?.school,\n    board: user?.board === null ? \"\" : user?.board,\n    pincode: user?.pincode === null ? \"\" : user?.pincode,\n  };\n\n  // schema validation\n  const validationSchema = Yup.object({\n    firstName: Yup.string(),\n    lastName: Yup.string(),\n    userName: Yup.string(),\n    email: Yup.string().email(),\n    uniqueId: Yup.string(),\n    walletCoin: Yup.number(),\n    mobileNumber: Yup.number().max(10),\n    grade: Yup.number().min(1).max(7),\n    school: Yup.string(),\n    board: Yup.string(),\n    pincode: Yup.number().min(100000).max(999999),\n  });\n\n  // submit handler\n  const onSubmit = (values) => {\n    const temp = { ...values };\n    temp.firstName = temp.firstName.trim();\n    temp.lastName = temp.lastName.trim();\n    temp.userName = temp.userName.trim();\n    temp.uniqueId = temp.uniqueId.trim();\n    temp.email = temp.email.trim();\n\n    //\n    fetch(`${config.apiServer}/user/edit/${params.userID}`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(temp),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        swal(data.message).then(() => {\n          navigate(\"/admin/users/list-users\");\n        });\n      });\n  };\n\n  return (\n    <MainCard title=\"Update User\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {/* form */}\n        <Form>\n          <Grid container rowSpacing={0} columnSpacing={3}>\n            {/* fields */}\n            <Field name=\"firstName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"firstName\"\n                      label={`First Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"firstName\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"lastName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"lastName\"\n                      label={`Last Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"lastName\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"userName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"userName\"\n                      label={`User Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"userName\"\n                      {...field}\n                      disabled\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"email\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"email\"\n                      label={`Email ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Valid Email\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"email\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"uniqueId\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"uniqueId\"\n                      label={`Unique Id ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"uniqueId\"\n                      {...field}\n                      disabled\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"walletCoin\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"walletCoin\"\n                      label={`Wallet Coin ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"walletCoin\"\n                      {...field}\n                      disabled\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"mobileNumber\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      inputProps={{\n                        maxLength: 10,\n                      }}\n                      id=\"mobileNumber\"\n                      label={`Mobile Number ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"10 Digit mobile number\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"mobileNumber\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"grade\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"grade\"\n                      label={`Grade ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Number only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"grade\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"school\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={12}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"school\"\n                      label={`School ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"school\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"board\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"board\"\n                      label={`Board ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"board\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"pincode\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"pincode\"\n                      label={`Pincode ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Number only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"pincode\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n            <br />\n\n            <Grid sx={{ mx: \"auto\", mt: 2 }}>\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Form>\n      </Formik>\n    </MainCard>\n  );\n};\n\nexport default EditUser;\n"],"sourceRoot":""}