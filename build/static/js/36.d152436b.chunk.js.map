{"version":3,"sources":["views/Exercise/SubCategory/SubCategory.js"],"names":["SubCategory","params","useParams","navigate","useNavigate","useState","singleSubCategory","setSingleSubCategory","FileUpload","setFileUpload","gradeValue","setGradeValue","formData","FormData","Grade","subCategoryGrades","useEffect","fetch","config","apiServer","subExerciseID","then","res","json","data","title","onSubmit","e","preventDefault","append","subCategoryName","method","body","swal","catch","error","container","rowSpacing","columnSpacing","xs","sm","md","item","sx","mb","id","name","style","width","marginBottom","color","type","value","disabled","placeholder","onChange","target","required","map","grade","index","htmlFor","className","variant","component","display","files","accept"],"mappings":"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","file":"static/js/36.d152436b.chunk.js","sourcesContent":["import {\n    Button,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n} from \"@mui/material\";\nimport config from \"config\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport \"../../Banner/index.css\";\n\nconst SubCategory = () => {\n    let params = useParams();\n    const navigate = useNavigate();\n    const [singleSubCategory, setSingleSubCategory] = useState({});\n    const [FileUpload, setFileUpload] = useState(null);\n    const [gradeValue, setGradeValue] = useState(\"\");\n    const formData = new FormData();\n    const Grade = singleSubCategory?.subCategoryGrades;\n\n    useEffect(() => {\n        fetch(\n            `${config.apiServer}/category/getSubCategory/${params.subExerciseID}`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                setSingleSubCategory(data);\n            });\n    }, [params.subExerciseID]);\n\n    const handleSubCategoryForm = (e) => {\n        e.preventDefault();\n        formData.append(\"file_path\", FileUpload[0]);\n        formData.append(\"subCategoryName\", singleSubCategory.subCategoryName);\n        formData.append(\"grade\", gradeValue);\n\n        fetch(`${config.apiServer}/category/uploadCategory`, {\n          method: \"POST\",\n          body: formData,\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            swal(\"Successfully created\", \"\", \"success\").then(() => {\n              navigate(\"/admin/exercise/exercise-list\");\n            });\n          })\n          .catch((error) => {\n            swal(\"Error!\", \"Something went wrong\", \"wrong\");\n          });\n    };\n\n    return (\n      <MainCard title=\"Sub-Category\">\n        <form onSubmit={handleSubCategoryForm}>\n          <Grid\n            container\n            rowSpacing={1}\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n          >\n            <Grid item xs={12} md={12}>\n              <InputLabel sx={{ mb: 2 }} id=\"demo-simple-\">\n                Sub-Category Name\n              </InputLabel>\n              <TextField\n                id=\"demo-simple-\"\n                name=\"subCategoryName\"\n                style={{ width: \"100%\", marginBottom: \"20px\" }}\n                color=\"secondary\"\n                type=\"text\"\n                value={singleSubCategory?.subCategoryName}\n                disabled\n              />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <InputLabel sx={{ mb: 2 }} id=\"demo-simple-select-label\">\n                Grade\n              </InputLabel>\n              <Select\n                \n                placeholder=\"Select-Grade\"\n                value={gradeValue || \"\"}\n                onChange={(e) => setGradeValue(e.target.value)}\n                style={{ width: \"100%\", marginBottom: \"20px\" }}\n                color=\"secondary\"\n                required\n              >\n                {Grade?.map((grade, index) => (\n                  <MenuItem key={index} value={grade}>\n                    {grade}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <InputLabel sx={{ mb: 2 }} id=\"question\">\n                Import Questions\n              </InputLabel>\n              <label htmlFor=\"Import Questions\">\n                <span className=\"FlexButton\">\n                  {!FileUpload ? (\n                    <div className=\"FlexButton_uploadText\">\n                      <Button variant=\"contained\" component=\"span\">\n                        Upload Files\n                      </Button>\n                    </div>\n                  ) : (\n                    <div className=\"FlexButton_uploadText\">\n                      {FileUpload[0]?.name}\n                    </div>\n                  )}\n                </span>\n                <span className=\"imageFieldPosition\">\n                  <input\n                    id=\"Import Questions\"\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={(e) => setFileUpload(e.target?.files)}\n                    required\n                    accept=\".csv\"\n                  />\n                </span>\n              </label>\n            </Grid>\n          </Grid>\n          {FileUpload && gradeValue ? (\n            <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n              Submit\n            </Button>\n          ) : (\n            <Button variant=\"contained\" color=\"secondary\" disabled>\n              Submit\n            </Button>\n          )}\n        </form>\n      </MainCard>\n    );\n};\n\nexport default SubCategory;\n"],"sourceRoot":""}