{"version":3,"sources":["views/GameManagement/GameQuestionUpload/GameQuestionUpdateModal.js"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","GameQuestionUpdateModal","handleClose","open","singleQuestion","id","React","useState","question","option1","option2","option3","correctAnswer","updateValue","setUpdateValue","words","answer","lingoWordUpdatedValue","setLingoWordUpdatedValue","handleFieldChange","e","fieldName","target","name","fieldValue","value","setLingoWordUpdated","editorState","setEditorState","useQuill","quill","quillRef","useEffect","clipboard","dangerouslyPasteHTML","on","root","innerHTML","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","sx","onSubmit","preventDefault","dataValue","lingoWordDataValue","passingValue","fetch","config","apiServer","method","headers","body","JSON","stringify","then","res","json","data","swal","title","icon","buttons","dangerMode","willUpdate","catch","err","container","rowSpacing","columnSpacing","xs","sm","md","item","mb","variant","display","gutterBottom","height","ref","defaultValue","onChange","fullWidth","color","mt","type","onClick","mx"],"mappings":"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","file":"static/js/27.4055130e.chunk.js","sourcesContent":["import React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport \"./index.css\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport config from \"config\";\nimport swal from \"sweetalert\";\nimport { useQuill } from \"react-quilljs\";\nimport \"../../../../node_modules/quill/dist/quill.snow.css\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"60%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 10,\n  p: 4,\n  borderRadius: 2,\n};\n//initialize the component\nconst GameQuestionUpdateModal = ({\n  handleClose,\n  open,\n  singleQuestion,\n  id\n}) => {\n  const [updateValue, setUpdateValue] = React.useState({\n    question: singleQuestion?.question,\n    option1: singleQuestion?.option1,\n    option2: singleQuestion?.option2,\n    option3: singleQuestion?.option3,\n    correctAnswer: singleQuestion?.correctAnswer,\n   \n  });\n  const [lingoWordUpdatedValue, setLingoWordUpdatedValue] = React.useState({\n    words: singleQuestion?.words,\n    answer: singleQuestion?.answer,\n  });\n\n  const handleFieldChange = (e) => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    setUpdateValue({\n      ...updateValue,\n      [fieldName]: fieldValue,\n    });\n  };\n\n  const setLingoWordUpdated = e => { \n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    setLingoWordUpdatedValue({\n      ...lingoWordUpdatedValue,\n      [fieldName]: fieldValue,\n    });\n  }\n  //quill editor\n  const [editorState, setEditorState] = React.useState(\"\");\n\n  const { quill, quillRef } = useQuill();\n  React.useEffect(() => {\n    if (quill) {\n      if (singleQuestion?.question) { \n        quill.clipboard.dangerouslyPasteHTML(singleQuestion?.question);\n        quill.on(\"text-change\", () => {\n          setEditorState(quill.root.innerHTML);\n        });\n      } else {\n         quill.clipboard.dangerouslyPasteHTML(\"\");\n         quill.on(\"text-change\", () => {\n           setEditorState(quill.root.innerHTML);\n         });\n      }\n     \n    }\n  }, [quill, singleQuestion.question]);\n\n  \n\n  //handle update\n  const handleUpdateQuestion = (e) => {\n    e.preventDefault();\n   \n    const dataValue = id === \"nDiny1GkmGtp99kvoTQN\" && {\n      ...updateValue,\n      question: editorState,\n    };\n    const lingoWordDataValue = id === \"N8m7QQi6AizzRWhbihHs\" && {\n      ...lingoWordUpdatedValue,\n    };\n      \n    const passingValue=dataValue || lingoWordDataValue;\n      fetch(\n        `${config.apiServer}/singleque/EditSinglePlayerQuestion/${singleQuestion?.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(passingValue),\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data) {\n            handleClose();\n            swal({\n              title: \"Update Successfully\",\n              icon: \"success\",\n              buttons: true,\n              dangerMode: true,\n            }).then((willUpdate) => {\n              if (willUpdate) {\n              }\n            });\n          }\n        })\n        .catch((err) => {\n          swal({\n            title: \"Update Failed\",\n            icon: \"error\",\n            buttons: true,\n            dangerMode: true,\n          });\n        });\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <form onSubmit={handleUpdateQuestion}>\n              <Grid\n                container\n                rowSpacing={1}\n                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n              >\n                {/* editor */}\n                {id === \"nDiny1GkmGtp99kvoTQN\" && (\n                  <>\n                    {\" \"}\n                    <Grid item xs={12} sx={{ mb: 5 }}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Question\n                      </Typography>\n                      <Box>\n                        {/* qillTextEditor */}\n                        <div style={{ width: \"100%\", height: \"150px\" }}>\n                          <div ref={quillRef} />\n                        </div>\n                      </Box>\n                    </Grid>\n                    {/* textfield  */}\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Option A\n                      </Typography>\n                      <TextField\n                        name=\"option1\"\n                        defaultValue={singleQuestion?.option1}\n                        onChange={handleFieldChange}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Option B\n                      </Typography>\n                      <TextField\n                        name=\"option2\"\n                        defaultValue={singleQuestion?.option2}\n                        onChange={handleFieldChange}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Option C\n                      </Typography>\n                      <TextField\n                        name=\"option3\"\n                        defaultValue={singleQuestion?.option3}\n                        onChange={handleFieldChange}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Correct Answer\n                      </Typography>\n                      <TextField\n                        name=\"correctAnswer\"\n                        defaultValue={singleQuestion?.correctAnswer}\n                        onChange={handleFieldChange}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                  </>\n                )}\n                {id === \"N8m7QQi6AizzRWhbihHs\" && (\n                  <>\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Words\n                      </Typography>\n                      <TextField\n                        name=\"words\"\n                        defaultValue={singleQuestion?.words}\n                        onChange={setLingoWordUpdated}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Answer\n                      </Typography>\n                      <TextField\n                        name=\"answer\"\n                        defaultValue={singleQuestion?.answer}\n                        onChange={setLingoWordUpdated}\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    </Grid>\n                  </>\n                )}\n\n                {/* button */}\n                <Grid item xs={12} sx={{ mt: 2 }}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                    Update\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={handleClose}\n                    sx={{ mx: 2 }}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\nexport default GameQuestionUpdateModal;\n"],"sourceRoot":""}