{"version":3,"sources":["views/userManagement/createUser/index.js"],"names":["CreateUser","navigate","useNavigate","validationSchema","Yup","firstName","required","lastName","userName","email","password","min","mobileNumber","max","grade","school","board","pincode","title","initialValues","onSubmit","values","temp","trim","fetch","config","apiServer","method","headers","body","JSON","stringify","then","res","json","data","swal","container","rowSpacing","columnSpacing","name","field","meta","sx","m","width","item","xs","sm","error","touched","id","label","placeholder","variant","color","inputProps","maxLength","mx","mt","type"],"mappings":"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","file":"static/js/47.b2305d7e.chunk.js","sourcesContent":["import { Button, Grid, TextField } from \"@mui/material\";\nimport config from \"config\";\nimport { Field, Form, Formik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport * as Yup from \"yup\";\n\nconst CreateUser = () => {\n  const navigate = useNavigate();\n  // initial values\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    mobileNumber: \"\",\n    grade: \"\",\n    school: \"\",\n    board: \"\",\n    pincode: \"\",\n  };\n\n  // schema validation\n  const validationSchema = Yup.object({\n    firstName: Yup.string().required(\"required field\"),\n    lastName: Yup.string(),\n    userName: Yup.string(),\n    email: Yup.string().email().required(\"required field\"),\n    password: Yup.string().min(6).required(\"required field\"),\n    mobileNumber: Yup.string().max(10),\n    grade: Yup.number().min(1).max(7).required(\"required field\"),\n    school: Yup.string(),\n    board: Yup.string(),\n    pincode: Yup.number().min(100000).max(999999),\n  });\n\n  // submit handler\n  const onSubmit = (values) => {\n    const temp = {\n      firstName: values.firstName.trim(),\n      lastName: values.lastName.trim(),\n      userName: values.userName.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n      mobileNumber: values.mobileNumber.trim(),\n      grade: values.grade.trim(),\n      school: values.school.trim(),\n      board: values.board.trim(),\n      pincode: values.pincode.trim(),\n    };\n\n    fetch(`${config.apiServer}/user/register`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(temp),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        swal(\"Successfully created\").then(() => {\n          navigate(\"/admin/users/list-users\");\n        });\n      });\n  };\n\n  return (\n    <MainCard title=\"User Creation\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {/* form */}\n        <Form>\n          <Grid container rowSpacing={0} columnSpacing={3}>\n            {/* fields */}\n            <Field name=\"firstName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"firstName\"\n                      label={`First Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"firstName\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"lastName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"lastName\"\n                      label={`Last Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"lastName\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"userName\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"userName\"\n                      label={`User Name ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Should be unique\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"userName\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"email\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"email\"\n                      label={`Email ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Valid Email\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"email\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"mobileNumber\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"mobileNumber\"\n                      label={`Mobile Number ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"10 Digit mobile number\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"mobileNumber\"\n                      inputProps={{maxLength: 10}}\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"password\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"password\"\n                      label={`Password ${\n                        meta.touched && meta.error ? \"*\" : \"\"\n                      }`}\n                      placeholder=\"Must be 6 character\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"password\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"grade\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"grade\"\n                      label={`Grade ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Number only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"grade\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"school\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"school\"\n                      label={`School ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"school\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"board\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"board\"\n                      label={`Board ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Text only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"board\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n\n            <Field name=\"pincode\">\n              {({ field, meta }) => {\n                return (\n                  <Grid\n                    sx={{\n                      \"& .MuiTextField-root\": { m: \"10px\", width: \"100%\" },\n                    }}\n                    item\n                    xs={12}\n                    sm={6}\n                  >\n                    <TextField\n                      error={meta.touched && meta.error ? true : false}\n                      id=\"pincode\"\n                      label={`Pincode ${meta.touched && meta.error ? \"*\" : \"\"}`}\n                      placeholder=\"Number only\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      name=\"pincode\"\n                      {...field}\n                    />\n                  </Grid>\n                );\n              }}\n            </Field>\n            <br />\n\n            <Grid sx={{ mx: \"auto\", mt: 2 }}>\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Form>\n      </Formik>\n    </MainCard>\n  );\n};\n\nexport default CreateUser;\n"],"sourceRoot":""}