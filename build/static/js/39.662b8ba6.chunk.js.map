{"version":3,"sources":["views/GameManagement/GameList/PowerUp.js"],"names":["PowerUp","tempData","gameId","useParams","useState","previous","setPrevious","mainGame","setMainGame","powerUp","setPowerUp","coin","setCoin","limitCount","setLimitCount","onOff","setOnOff","iap","setIap","buyingLimit","setBuyingLimit","updated","setUpdated","useEffect","fetch","config","apiServer","then","res","json","data","catch","err","id","Items","length","map","game","i","index","powerName","coins","enable","isEnable","isIAP","isBuyingLimit","edit","to","Fragment","title","sx","marginBottom","onSubmit","e","formData","gameName","method","headers","body","JSON","stringify","swal","preventDefault","target","reset","container","rowSpacing","columnSpacing","xs","sm","md","item","label","variant","disabled","fullWidth","required","color","onBlur","value","handlePowerUp","type","handleCoin","control","checked","onClick","onChange","titles"],"mappings":"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","file":"static/js/39.662b8ba6.chunk.js","sourcesContent":["import {\n  Button,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { IconEdit } from \"@tabler/icons\";\nimport config from \"config\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport MainTable from \"ui-component/table/Maintable\";\n\nconst PowerUp = () => {\n  const { gameId } = useParams();\n  const [previous, setPrevious] = useState([]);\n  const [mainGame, setMainGame] = useState([]);\n  // from data\n  const [powerUp, setPowerUp] = useState(\"\");\n  const [coin, setCoin] = useState(\"\");\n  const [limitCount, setLimitCount] = useState(\"\");\n  const [onOff, setOnOff] = useState(false);\n  const [iap, setIap] = useState(false);\n  const [buyingLimit, setBuyingLimit] = useState(false);\n  const [updated, setUpdated] = useState(false);\n  useEffect(() => {\n    fetch(`${config.apiServer}/game/${gameId}/get-game`)\n      .then((res) => res.json())\n      .then((data) => setMainGame(data))\n      .catch((err) => {});\n\n    fetch(`${config.apiServer}/power-ups/get-powerup/${mainGame.id}`)\n      .then((res) => res.json())\n      .then((data) => setPrevious(data.Items))\n      .catch((err) => {});\n  }, [gameId, mainGame.id, updated]);\n  // Table data\n  let tempData;\n  if (previous.length > 0) {\n    tempData = previous.map((game, i) => {\n      const temp = {\n        index: i + 1,\n        powerName: game.powerName,\n        coins: game.coins,\n        enable: game.isEnable ? \"True\" : \"False\",\n        iap: game.isIAP ? \"True\" : \"False\",\n        buyingLimit: game.isBuyingLimit ? \"True\" : \"False\",\n        limitCount: game.limitCount,\n        edit: (\n          <Link to={`editPowerUp/${game.id}`}>\n            <Button>\n              <IconEdit />\n            </Button>\n          </Link>\n        ),\n      };\n      return temp;\n    });\n  }\n  // handle form data\n  const handlePowerUp = (e) => {\n    setPowerUp(e.target.value);\n  };\n  const handleCoin = (e) => {\n    setCoin(e.target.value);\n  };\n  const handleNumber = (e) => {\n    setLimitCount(e.target.value);\n  };\n  // handle form submit\n  const handleSubmit = (e) => {\n    const formData = {\n      coins: coin,\n      gameId: mainGame.id,\n      gameName: mainGame.gameName,\n      isBuyingLimit: buyingLimit,\n      isEnable: onOff,\n      isIAP: iap,\n      limitCount: limitCount,\n      powerName: powerUp,\n    };\n    fetch(`${config.apiServer}/power-ups/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data) {\n          swal(\"Success\", \"Power Up Added Successfully\", \"success\");\n          setUpdated(true);\n        }\n      });\n    e.preventDefault();\n    e.target.reset();\n  };\n  return (\n    <React.Fragment>\n      <MainCard\n        title=\"Power-Up Single-Player (update in In App Purchases)\"\n        sx={{ marginBottom: \"20px\" }}\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            rowSpacing={1}\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n          >\n            <Grid item xs={6}>\n              <TextField\n                id=\"outlined-basic\"\n                label={mainGame.gameName}\n                variant=\"outlined\"\n                disabled\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={6} />\n            <Grid item xs={6}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Power Up\"\n                variant=\"outlined\"\n                required\n                color=\"secondary\"\n                onBlur={(e) => {\n                  handlePowerUp(e);\n                }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Coins\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                color=\"secondary\"\n                type={\"number\"}\n                onBlur={(e) => {\n                  handleCoin(e);\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Switch checked={onOff} color=\"secondary\" />}\n                  label=\"ON/OFF\"\n                  onClick={(e) => {\n                    setOnOff(e.target.checked);\n                  }}\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item xs={3}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Switch checked={iap} color=\"secondary\" />}\n                  label=\"IAP?\"\n                  onClick={(e) => {\n                    setIap(e.target.checked);\n                  }}\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item xs={3}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Switch checked={buyingLimit} color=\"secondary\" />}\n                  label=\"Buying Limit\"\n                  onClick={(e) => {\n                    setBuyingLimit(e.target.checked);\n                  }}\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"1\"\n                variant=\"outlined\"\n                fullWidth\n                type={\"number\"}\n                color=\"secondary\"\n                required\n                onChange={handleNumber}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              {powerUp && coin && limitCount ? (\n                <Button variant=\"contained\" type=\"submit\" color=\"secondary\">\n                  Create\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  disabled\n                  type=\"submit\"\n                  color=\"secondary\"\n                >\n                  Create\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n      </MainCard>\n\n      {/* Table */}\n      <MainCard\n        title=\"Previously Added\n    \"\n      >\n        {previous.length > 0 && (\n          <MainTable\n            titles={[\n              \"Sr. No.\",\n              \"Power Name\",\n              \"Coins\",\n              \"Enable\",\n              \"IAP\",\n              \"BuyingLimit\",\n              \"Limit Count\",\n              \"Edit\",\n            ]}\n            data={tempData}\n          />\n        )}\n      </MainCard>\n    </React.Fragment>\n  );\n};\n\nexport default PowerUp;\n"],"sourceRoot":""}