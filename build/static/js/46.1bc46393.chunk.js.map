{"version":3,"sources":["views/rewards/add/index.js"],"names":["AddRewards","navigate","useNavigate","validationSchema","Yup","rewardName","required","amount","title","initialValues","onSubmit","values","tempData","name","coin","Number","fetch","config","apiServer","method","headers","body","JSON","stringify","then","res","json","data","swal","catch","error","container","style","textAlign","alignItems","spacing","field","meta","item","xs","sm","md","touched","id","label","sx","width","placeholder","variant","color","marginRight","type"],"mappings":"+NA8HeA,UAtHI,WACf,IAAMC,EAAWC,cAKXC,EAAmBC,IAAW,CAChCC,WAAYD,MAAaE,SAAS,kBAClCC,OAAQH,MAAaE,SAAS,oBA0BlC,OACI,cAAC,IAAD,CAAUE,MAAM,cAAhB,SACI,cAAC,IAAD,CACIC,cAnCU,CAClBJ,WAAY,GACZE,OAAQ,IAkCAG,SA3BK,SAACC,GACd,IAAMC,EAAW,CACbC,KAAMF,EAAON,WACbS,KAAMC,OAAOJ,EAAOJ,SAGxBS,MAAM,GAAD,OAAIC,IAAOC,UAAX,yBAA6C,CAC9CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHC,IAAK,wBAAwBJ,MAAK,WAC9BvB,EAAS,qCAGhB4B,OAAM,SAACC,GACJF,IAAK,SAAU,uBAAwB,aAQvCzB,iBAAkBA,EAHtB,SAKI,cAAC,IAAD,UACI,eAAC,IAAD,CACI4B,WAAS,EACTC,MAAO,CAAEC,UAAW,SAAUC,WAAY,UAC1CC,QAAS,EAHb,UAKI,cAAC,IAAD,CAAOtB,KAAK,aAAZ,SACK,YAAsB,IAAnBuB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACP,OACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,aACIX,SACIO,EAAKK,UAAWL,EAAKP,OAIzBa,GAAG,aACHC,MAAK,sBACDP,EAAKK,SAAWL,EAAKP,MACf,IACA,IAEVe,GAAI,CAAEC,MAAO,GACbC,YAAY,YACZC,QAAQ,WACRC,MAAM,YACNpC,KAAK,cACDuB,SAMxB,cAAC,IAAD,CAAOvB,KAAK,SAAZ,SACK,YAAsB,IAAnBuB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACP,OACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,aACIX,SACIO,EAAKK,UAAWL,EAAKP,OAIzBa,GAAG,SACHC,MAAK,iBACDP,EAAKK,SAAWL,EAAKP,MACf,IACA,IAEVe,GAAI,CAAEC,MAAO,GACbC,YAAY,cACZC,QAAQ,WACRC,MAAM,YACNpC,KAAK,UACDuB,SAMxB,cAAC,IAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CACIQ,MAAM,YACND,QAAQ,YACRhB,MAAO,CAAEkB,YAAa,QACtBC,KAAK,SAJT","file":"static/js/46.1bc46393.chunk.js","sourcesContent":["import { Button, Grid, TextField } from \"@mui/material\";\nimport config from \"config\";\nimport { Field, Form, Formik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport * as Yup from \"yup\";\n\nconst AddRewards = () => {\n    const navigate = useNavigate();\n    const initialValues = {\n        rewardName: \"\",\n        amount: \"\",\n    };\n    const validationSchema = Yup.object({\n        rewardName: Yup.string().required(\"required field\"),\n        amount: Yup.number().required(\"required field\"),\n    });\n\n    const onSubmit = (values) => {\n        const tempData = {\n            name: values.rewardName,\n            coin: Number(values.amount),\n        };\n\n        fetch(`${config.apiServer}/rewards/createReward`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(tempData),\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                swal(\"Successfully created\").then(() => {\n                    navigate(\"/admin/rewards/rewards-list\");\n                });\n            })\n            .catch((error) => {\n                swal(\"Error!\", \"Something went wrong\", \"wrong\");\n            });\n    };\n    return (\n        <MainCard title=\"Add Rewards\">\n            <Formik\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                validationSchema={validationSchema}\n            >\n                <Form>\n                    <Grid\n                        container\n                        style={{ textAlign: \"center\", alignItems: \"center\" }}\n                        spacing={3}\n                    >\n                        <Field name=\"rewardName\">\n                            {({ field, meta }) => {\n                                return (\n                                    <Grid item xs={12} sm={6} md={4}>\n                                        <TextField\n                                            error={\n                                                meta.touched && meta.error\n                                                    ? true\n                                                    : false\n                                            }\n                                            id=\"rewardName\"\n                                            label={`Reward Name ${\n                                                meta.touched && meta.error\n                                                    ? \"*\"\n                                                    : \"\"\n                                            }`}\n                                            sx={{ width: 1 }}\n                                            placeholder=\"Text only\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            name=\"rewardName\"\n                                            {...field}\n                                        />\n                                    </Grid>\n                                );\n                            }}\n                        </Field>\n                        <Field name=\"amount\">\n                            {({ field, meta }) => {\n                                return (\n                                    <Grid item xs={12} sm={6} md={4}>\n                                        <TextField\n                                            error={\n                                                meta.touched && meta.error\n                                                    ? true\n                                                    : false\n                                            }\n                                            id=\"amount\"\n                                            label={`amount ${\n                                                meta.touched && meta.error\n                                                    ? \"*\"\n                                                    : \"\"\n                                            }`}\n                                            sx={{ width: 1 }}\n                                            placeholder=\"Number only\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            name=\"amount\"\n                                            {...field}\n                                        />\n                                    </Grid>\n                                );\n                            }}\n                        </Field>\n                        <Grid item xs={12} sm={6} md={4}>\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                style={{ marginRight: \"10px\" }}\n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Form>\n            </Formik>\n        </MainCard>\n    );\n};\n\nexport default AddRewards;\n"],"sourceRoot":""}