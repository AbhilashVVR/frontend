{"version":3,"sources":["hooks/useScriptRef.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","AuthCardWrapper","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","FirebaseLogin","others","useTheme","scriptedRef","navigate","useNavigate","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleLogin","values","fetch","config","apiServer","method","headers","body","JSON","stringify","userName","email","password","then","res","json","data","token","console","log","localStorage","setItem","Grid","container","justifyContent","spacing","item","alignItems","Box","mb","Typography","variant","initialValues","submit","validationSchema","Yup","shape","max","required","onSubmit","a","setErrors","setStatus","setSubmitting","success","err","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","mt","Button","disableElevation","disabled","color","Login","getItem","user","jwtDecode","matchDownSM","useMediaQuery","breakpoints","down","m","to","Logo","Stack","secondary","main","gutterBottom","AuthLogin","Divider"],"mappings":"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","file":"static/js/14.a7af6030.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","// assets\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from \"@mui/material\";\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport config from \"config\";\nimport { Formik } from \"formik\";\n// project imports\nimport useScriptRef from \"hooks/useScriptRef\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\n// third party\nimport * as Yup from \"yup\";\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  // const [checked, setChecked] = useState(true);\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  const handleLogin = (values) => {\n    fetch(`${config.apiServer}/admin/login`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userName: values.email,\n        password: values.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.token) {\n          console.log(\"TOKEN\", data.token);\n          navigate(\"/admin\", true);\n          localStorage.setItem(\"token\", data.token);\n        }\n      });\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid\n          item\n          xs={12}\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\">\n              Sign in with Email address\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          email: \"admin\",\n          password: \"asdf1234\",\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .max(255)\n            .required(\"Email or username is required\"),\n          password: Yup.string().max(255).required(\"Password is required\"),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n              handleLogin(values);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">\n                Email Address / Username\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-login\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                label=\"Email Address / Username\"\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text-email-login\"\n                >\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password-login\">\n                Password\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-login\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n                inputProps={{}}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text-password-login\"\n                >\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </FormControl>\n            {/* <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              spacing={1}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={(event) => setChecked(event.target.checked)}\n                    name=\"checked\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Remember me\"\n              />\n            </Stack> */}\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  disableElevation\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Sign in\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirebaseLogin;\n","import { Divider, Grid, Stack, Typography, useMediaQuery } from \"@mui/material\";\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Logo from \"ui-component/Logo\";\nimport AuthLogin from \"../auth-forms/AuthLogin\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\n// project imports\nimport AuthWrapper1 from \"../AuthWrapper1\";\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n  let navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      //navigate(\"/admin\");\n      const user = token ? jwtDecode(token) : {};\n\n      if (user?.id) {\n        navigate(\"/admin\");\n      }\n    } catch (err) {\n    } finally {\n    }\n  }, [navigate]);\n\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <AuthWrapper1>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"flex-end\"\n        sx={{ minHeight: \"100vh\" }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\n          >\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid\n                  container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack\n                          alignItems=\"center\"\n                          justifyContent=\"center\"\n                          spacing={1}\n                        >\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\n                          >\n                            Hi, Welcome Back\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthLogin />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid> */}\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}