{"version":3,"sources":["views/GameManagement/GameCreation/GameCreation.js"],"names":["GameCreation","useState","gameName","setGameName","gameDescription","setGameDescription","imageValidate","setImageValidate","dateValue","setDateValue","imageFile","setImageFile","name","setName","packageName","setPackageName","gameTypes","setGameTypes","FileUpload","setFileUpload","newGameType","setNewGameType","featuredGameType","setFeaturedGameType","singlePlayer","setSinglePlayer","multiPlayer","setMultiPlayer","dailyCompetition","setDailyCompetition","website","setWebsite","html5Url","setHtml5Url","error","setError","error2","setError2","gameVersion","setGameVersion","checked","setChecked","checked2","setChecked2","navigate","useNavigate","formData","FormData","gameCreationValue","progress","setProgress","date","Date","toISOString","slice","title","sx","display","justifyContent","alignItems","color","onSubmit","e","preventDefault","appFile","imagesFiles","convertImage","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","convertBase64","then","image","stringLength","length","Math","ceil","gameType","gameIcon","createdAt","html5Link","appType","re","test","actionName","append","apkLink","JSON","stringify","console","log","axios","post","config","apiServer","headers","charset","res","data","swal","text","icon","button","willSuccess","container","rowSpacing","columnSpacing","xs","sm","md","item","onChange","target","value","id","label","variant","fullWidth","helperText","style","width","dateAdapter","AdapterDateFns","margin","disablePast","required","newValue","renderInput","params","multiline","rows","gutterBottom","htmlFor","className","accept","type","files","severity","minWidth","marginTop","labelId","mt","disabled","mb"],"mappings":"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","file":"static/js/23.d008d26c.chunk.js","sourcesContent":["import { DatePicker, LocalizationProvider } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport {\n  Alert,\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport axios from \"axios\";\nimport config from \"config\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport swal from \"sweetalert\";\nimport MainCard from \"ui-component/cards/MainCard\";\nimport \"../../Banner/index.css\";\nimport \"./gameCreationApkfileCss.css\";\n\nconst GameCreation = () => {\n  const [gameName, setGameName] = useState(\"\");\n  const [gameDescription, setGameDescription] = useState(\"\");\n  const [imageValidate, setImageValidate] = useState(false);\n  const [dateValue, setDateValue] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [packageName, setPackageName] = useState(\"\");\n  const [gameTypes, setGameTypes] = useState(\"\");\n  const [FileUpload, setFileUpload] = useState({});\n  const [newGameType, setNewGameType] = useState(false);\n  const [featuredGameType, setFeaturedGameType] = useState(false);\n  const [singlePlayer, setSinglePlayer] = useState(false);\n  const [multiPlayer, setMultiPlayer] = useState(false);\n  const [dailyCompetition, setDailyCompetition] = useState(false);\n  const [website, setWebsite] = useState(false);\n  const [html5Url, setHtml5Url] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [error2, setError2] = useState(\"\");\n  const [gameVersion, setGameVersion] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [checked2, setChecked2] = useState(false);\n  const navigate = useNavigate();\n  const formData = new FormData();\n  const gameCreationValue = {};\n  const [progress, setProgress] = useState(false);\n\n  const date = new Date(dateValue).toISOString().slice(0, 10);\n\n\n  const convertBase64 = (imagesFiles) => {\n    const convertImage = new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(imagesFiles);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n    return convertImage;\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setProgress(true);\n    if (gameName === \"\" || gameDescription === \"\" || dateValue === null) {\n      return setError2(\"Please fill all the fields\");\n    } else {\n      setError2(\"\");\n      const appFile = FileUpload[0];\n      const imagesFiles = imageFile[0];\n      convertBase64(imagesFiles)?.then((image) => {\n        // const removeImgVariable = image.split(\",\")[1];\n        const stringLength = image.length - \"data:image/png;base64,\".length;\n        const sizeInBytes =\n          4 * Math.ceil(stringLength / 3) * 0.5624896334383812;\n        const sizeInKb = sizeInBytes / 1000;\n        if (sizeInKb < 200) {\n          if (newGameType) {\n            gameCreationValue.gameType = \"New\";\n          }\n          if (featuredGameType) {\n            gameCreationValue.gameType = \"Featured\";\n          }\n          if (newGameType === \"\" && featuredGameType === \"\") { \n            gameCreationValue.gameType = \"\";\n          }\n          \n          gameCreationValue.singlePlayer = singlePlayer;\n          gameCreationValue.multiPlayer = multiPlayer;\n          gameCreationValue.dailyCompetition = dailyCompetition;\n          gameCreationValue.website = website;\n          gameCreationValue.gameIcon = image;\n          gameCreationValue.gameDescription = gameDescription;\n          gameCreationValue.createdAt = date;\n          gameCreationValue.html5Link = html5Url;\n          gameCreationValue.appType = gameTypes;\n          gameCreationValue.gameVersion = gameVersion;\n          gameCreationValue.gameName = gameName;\n\n          const re = /^[0-9\\b]+$/;\n          if (re.test(gameName) || re.test(gameDescription)) {\n            return setError(\n              \"Please enter a valid name, it should not contain numbers\"\n            );\n          }\n\n          if (appFile) { \n            gameCreationValue.actionName = name;\n            gameCreationValue.packageName = packageName;\n            formData.append(\"file_path\", appFile);\n          } else {\n            gameCreationValue.actionName = \"\";\n            gameCreationValue.packageName = \"\";\n            gameCreationValue.apkLink = \"\";\n      }\n          formData.append(\"data\", JSON.stringify(gameCreationValue));\n        console.log(gameCreationValue);\n          setImageValidate(false);\n          var header = {\n            \"Content-Type\": \"application/json\",\n            charset: \"utf-8\",\n          };\n\n          axios\n            .post(`${config.apiServer}/game/register`, formData, {\n              headers: header,\n            })\n            .then((res) => {\n              if (res.data) {\n                setProgress(false);\n                swal({\n                  title: \"Game Created\",\n                  text: \"Game Created Successfully\",\n                  icon: \"success\",\n                  button: true,\n                }).then((willSuccess) => {\n                  if (willSuccess) {\n                    navigate(\"/admin/games/game-list\");\n                  }\n                });\n              } else {\n                swal({\n                  title: \"Game Creation Failed\",\n                  text: \"Game Creation Failed\",\n                  icon: \"error\",\n                  button: true,\n                });\n              }\n            });\n        } else {\n          return setImageValidate(true);\n        }\n      });\n      setImageFile(null);\n      setFileUpload(null);\n    }\n\n    // e.target.reset();\n  };\n\n  return (\n    <>\n      <MainCard title=\"Game Creation\">\n        {progress ? (\n          <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <CircularProgress color=\"secondary\" />\n          </Box>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <Grid\n              container\n              rowSpacing={1}\n              columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n            >\n              <Grid item xs={12} md={6} sm={12}>\n                <TextField\n                  onChange={(e) => setGameName(e.target.value)}\n                  id=\"outlined-basic\"\n                  label=\"Game Name\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  fullWidth\n                  helperText={\n                    error || error2 ? (\n                      <span style={{ color: \"red\" }}>{error || error2}</span>\n                    ) : (\n                      \"\"\n                    )\n                  }\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sm={12}\n                sx={{\n                  \"& .css-1u3bzj6-MuiFormControl-root-MuiTextField-root\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    id=\"outlined-basic\"\n                    label=\"Created On\"\n                    margin=\"normal\"\n                    disablePast\n                    value={dateValue}\n                    required\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Game Description\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  color=\"secondary\"\n                  fullWidth\n                  multiline\n                  rows={3}\n                  helperText={\n                    error || error2 ? (\n                      <span style={{ color: \"red\" }}>{error || error2}</span>\n                    ) : (\n                      \"\"\n                    )\n                  }\n                  // required\n                  onChange={(e) => setGameDescription(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                  Upload Image (*Image Size should be less than 200 KB)\n                </Typography>\n                <Box>\n                  <label htmlFor=\"contained-button-file\">\n                    <span className=\"imageFieldPosition\">\n                      <input\n                        className=\"FlexButton_uploadText\"\n                        id=\"contained-button-file\"\n                        accept=\"image/*\"\n                        type=\"file\"\n                        style={{ display: \"block\" }}\n                        onChange={(e) => setImageFile?.(e.target.files)}\n                      />\n                    </span>\n                  </label>\n\n                  {imageValidate && (\n                    <Alert variant=\"outlined\" severity=\"error\">\n                      \"Oops!\", \"Image size should be less than 200 KB\"\n                    </Alert>\n                  )}\n                </Box>\n              </Grid>\n              {/* Game type selection */}\n              <Grid item xs={12} sm={6}>\n                <Box sx={{ minWidth: 120 }}>\n                  <FormControl\n                    fullWidth\n                    style={\n                      !imageFile ? { marginTop: \"22px\" } : { marginTop: \"20px\" }\n                    }\n                  >\n                    <InputLabel color=\"secondary\" id=\"demo-simple-select-label\">\n                      Game Type\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={gameTypes}\n                      color=\"secondary\"\n                      label=\"Game Type\"\n                      onChange={(e) => {\n                        setGameTypes(e.target.value);\n                      }}\n                      \n                    >\n                      <MenuItem value={\"html5\"}>HTML5</MenuItem>\n                      <MenuItem value={\"apk\"}>APK</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Grid>\n              {/* Conditional file upload section */}\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <label>\n                    {/* writing the uploaderComponent */}\n                    <Box sx={{ mt: 1 }}>\n                      <Typography\n                        variant=\"caption\"\n                        display=\"block\"\n                        gutterBottom\n                      >\n                        Upload Apk\n                      </Typography>\n                      <input\n                        className=\"FlexButton_uploadText\"\n                        id=\"contained-button-file\"\n                        accept=\".apk,.xapk\"\n                        type=\"file\"\n                        style={{ display: \"block\" }}\n                        onChange={(e) => setFileUpload(e.target.files)}\n                      />\n                    </Box>\n                    \n                  </label>\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    sx={{ mt: 4 }}\n                    id=\"outlined-basic\"\n                    label=\"Game Version\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    // sx={{ mt: 1 }}\n                    onChange={(e) => setGameVersion(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    style={{ marginTop: \"17px\" }}\n                    id=\"outlined-basic\"\n                    label=\"Activity Name\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    onChange={(e) => setName(e.target.value)}\n                    helperText={\n                      error || error2 ? (\n                        <span style={{ color: \"red\" }}>{error || error2}</span>\n                      ) : (\n                        \"\"\n                      )\n                    }\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                {gameTypes === \"apk\" && (\n                  <TextField\n                    style={{ marginTop: \"16px\" }}\n                    id=\"outlined-basic\"\n                    label=\"Package Name\"\n                    variant=\"outlined\"\n                    fullWidth\n                    color=\"secondary\"\n                    onChange={(e) => setPackageName(e.target.value)}\n                    helperText={\n                      error || error2 ? (\n                        <span style={{ color: \"red\" }}>{error || error2}</span>\n                      ) : (\n                        \"\"\n                      )\n                    }\n                  />\n                )}\n              </Grid>\n              {/* Switch buttons */}\n              <Grid item xs={12} md={6} sm={12}>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h3\">\n                  Game Type\n                </Typography>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h4\">\n                  New\n                  <span>\n                    {checked ? (\n                      <Switch\n                        color=\"secondary\"\n                        disabled\n                        onChange={(e) => {\n                          setNewGameType(e.target.checked);\n                          setChecked2(e.target.checked);\n                        }}\n                      />\n                    ) : (\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setNewGameType(e.target.checked);\n                          setChecked2(e.target.checked);\n                        }}\n                      />\n                    )}\n                  </span>{\" \"}\n                </Typography>\n                <Typography sx={{ marginTop: \"15px\" }} variant=\"h4\">\n                  Featured{\" \"}\n                  <span>\n                    {checked2 ? (\n                      <Switch\n                        color=\"secondary\"\n                        disabled\n                        onChange={(e) => {\n                          setFeaturedGameType(e.target.checked);\n                          setChecked(e.target.checked);\n                        }}\n                      />\n                    ) : (\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setFeaturedGameType(e.target.checked);\n                          setChecked(e.target.checked);\n                        }}\n                      />\n                    )}\n                  </span>\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6} sm={12}>\n                <Typography sx={{ marginTop: \"15px\", mb: 2 }} variant=\"h3\">\n                  Game Functions (Min. One)\n                </Typography>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Single Player{\" \"}\n                    <span>\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => {\n                          setSinglePlayer(e.target.checked);\n                        }}\n                      />\n                    </span>\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && singlePlayer && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        // error={error2}\n                        helperText={\n                          error2 ? (\n                            <span style={{ color: \"red\" }}>{error2}</span>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                        // required\n                        onChange={(e) => setHtml5Url(e.target.value)}\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Multi Player{\" \"}\n                    <span>\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => setMultiPlayer(e.target.checked)}\n                      />\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && multiPlayer && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        // error={error2}\n                        helperText={\n                          error2 ? (\n                            <span style={{ color: \"red\" }}>{error2}</span>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                        // required\n                        onChange={(e) => setHtml5Url(e.target.value)}\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1.5,\n                  }}\n                >\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Daily Competition{\" \"}\n                    <span>\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => setDailyCompetition(e.target.checked)}\n                      />\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && dailyCompetition && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        // error={error2}\n                        helperText={\n                          error2 ? (\n                            <span style={{ color: \"red\" }}>{error2}</span>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                        // required\n                        onChange={(e) => setHtml5Url(e.target.value)}\n                      />\n                    )}\n                  </Box>\n                </Box>\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  <Typography\n                    sx={{ marginTop: \"15px\", width: \"40%\" }}\n                    variant=\"h4\"\n                  >\n                    Website{\" \"}\n                    <span>\n                      <Switch\n                        color=\"secondary\"\n                        onChange={(e) => setWebsite(e.target.checked)}\n                      />\n                    </span>{\" \"}\n                  </Typography>\n                  <Box sx={{ width: \"60%\" }}>\n                    {gameTypes === \"html5\" && website && (\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"HTML5 URL\"\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"secondary\"\n                        // error={error2}\n                        helperText={\n                          error2 ? (\n                            <span style={{ color: \"red\" }}>{error2}</span>\n                          ) : (\n                            \"\"\n                          )\n                        }\n                        // required\n                        onChange={(e) => setHtml5Url(e.target.value)}\n                      />\n                    )}\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n            {(gameName && date && gameDescription ? (\n              <Button\n                sx={{ marginTop: \"30px\" }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Submit\n              </Button>\n            ) : (\n              <Button\n                sx={{ marginTop: \"30px\" }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled\n              >\n                Submit\n              </Button>\n            ))}\n          </form>\n            \n        )}\n      </MainCard>\n    </>\n  );\n};\n\nexport default GameCreation;\n"],"sourceRoot":""}